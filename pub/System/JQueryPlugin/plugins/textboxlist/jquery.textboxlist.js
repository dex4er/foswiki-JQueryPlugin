;(function($){$.fn.extend({textboxlist:function(options){var opts=$.extend({},$.TextboxLister.defaults,options);return this.each(function(){new $.TextboxLister(this,opts);});}});$.TextboxLister=function(elem,opts){var self=this;self.input=$(elem);self.opts=$.extend({},self.input.metadata(),opts);if(!self.opts.inputName){self.opts.inputName=self.input.attr('name');}
self.container=self.input.wrap("<div class="+self.opts.containerClass+"></div>")
.parent().append("<span class='foswikiClear'></span>");if(self.opts.clearControl){$(self.opts.clearControl).click(function(){self.clear();this.blur();return false;});}
if(self.opts.resetControl){$(self.opts.resetControl).click(function(){self.reset();this.blur();return false;});}
if(self.opts.autocomplete){var autocompleteOpts=$.extend({},{selectFirst:false,autoFill:false,matchCase:true,matchSubset:true},self.opts.autocompleteOpts);self.input.attr('autocomplete','off').autocomplete(self.opts.autocomplete,autocompleteOpts).result(function(event,data,value){self.select(value);});}else{$.log("TEXTBOXLIST: no autocomplete");}
self.input.bind(($.browser.opera?"keypress":"keydown")+".textboxlist",function(event){if(event.keyCode==13){var val=self.input.val();if(val){self.select([val]);event.preventDefault();return false;}}});self.currentValues=[];if(self.input.val()){self.select(self.input.val().split(/\s*,\s*/),true);}
self.initialValues=self.currentValues.slice();}
$.TextboxLister.prototype.clear=function(){$.log("TEXTBOXLIST: called clear");var self=this;self.container.find("."+self.opts.listValueClass).remove();self.currentValues=[];if(typeof(self.opts.onClear)=='function'){$.log("TEXTBOXLIST: calling onClear handler");self.opts.onClear(self);}};$.TextboxLister.prototype.reset=function(){$.log("TEXTBOXLIST: called reset");var self=this;self.clear();self.select(self.initialValues);if(typeof(self.opts.onReset)=='function'){$.log("TEXTBOXLIST: calling onReseet handler");self.opts.onReset(self);}};$.TextboxLister.prototype.select=function(values,suppressCallback){$.log("TEXTBOXLIST: called select("+values+") "+typeof(values));var self=this;if(typeof(values)=='object'){values=values.join(',');}
values=values.split(/\s*,\s*/);if(self.currentValues.length>0){for(var i=0;i<values.length;i++){var val=values[i];var found=false;if(!val){continue;}
$.log("val='"+val+"'");for(j=0;j<self.currentValues.length;j++){var currentVal=self.currentValues[j];if(currentVal==val){found=true;break;}}
if(!found){self.currentValues.push(val);}}}else{self.currentValues=new Array();for(var i=0;i<values.length;i++){var val=values[i];if(val){self.currentValues.push(val);}}}
if(self.opts.doSort){self.currentValues=self.currentValues.sort();}
$.log("TEXTBOXLIST: self.currentValues="+self.currentValues+"("+self.currentValues.length+")");self.container.find("."+self.opts.listValueClass).remove();for(var i=self.currentValues.length-1;i>=0;i--){var val=self.currentValues[i];if(!val)
continue;var input="<input type='hidden' name='"+self.opts.inputName+"' value='"+val+"' />";var close=$("<a href='#' title='remove "+val+"'></a>").addClass(self.opts.closeClass).click(function(){self.deselect.call(self,$(this).parent().find("input").val());return false;});$("<span></span>").addClass(self.opts.listValueClass).append(input).append(close).append(val).prependTo(self.container);}
self.input.val('');if(!suppressCallback&&typeof(self.opts.onSelect)=='function'){$.log("TEXTBOXLIST: calling onSelect handler");self.opts.onSelect(self);}};$.TextboxLister.prototype.deselect=function(values){$.log("TEXTBOXLIST: called deselect("+values+")");var self=this;var newValues=new Array();if(typeof(values)=='object'){values=values.join(',');}
values=values.split(/\s*,\s*/);if(!values.length){return;}
for(var i=0;i<self.currentValues.length;i++){var currentVal=self.currentValues[i];if(!currentVal)
continue;var found=false;for(j=0;j<values.length;j++){var val=values[j];if(val&&currentVal==val){found=true;break;}}
if(!found&&currentVal){newValues.push(currentVal);}}
self.currentValues=newValues;if(typeof(self.opts.onDeselect)=='function'){$.log("TEXTBOXLIST: calling onDeselect handler");self.opts.onDeselect(self);}
self.select(newValues);};$.TextboxLister.defaults={containerClass:'jqTextboxListContainer',listValueClass:'jqTextboxListValue',closeClass:'jqTextboxListClose',doSort:false,inputName:undefined,resetControl:undefined,clearControl:undefined,autocomplete:undefined,onClear:undefined,onReset:undefined,onSelect:undefined,onDeselect:undefined};})(jQuery);;
